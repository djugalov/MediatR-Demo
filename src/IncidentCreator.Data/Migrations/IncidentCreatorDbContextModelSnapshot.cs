// <auto-generated />
using System;
using IncidentCreator.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IncidentCreator.Data.Migrations
{
    [DbContext(typeof(IncidentCreatorDbContext))]
    partial class IncidentCreatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IncidentCreator.Data.Models.Incident", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<int>("Impact")
                        .HasColumnType("int")
                        .HasColumnName("impact");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.HasKey("ID");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("IncidentCreator.Data.Models.IncidentProductMap", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("incident_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("incident_id");

                    b.HasIndex("product_id");

                    b.ToTable("IncidentProductMaps");
                });

            modelBuilder.Entity("IncidentCreator.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("IsUnderIncident")
                        .HasColumnType("bit")
                        .HasColumnName("is_under_incident");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c4ec0869-11aa-43c3-a338-d6f813aba2b1"),
                            IsUnderIncident = false,
                            Name = "TestProduct-1"
                        },
                        new
                        {
                            ID = new Guid("5b99a661-1421-498c-b2aa-9f764dfee832"),
                            IsUnderIncident = false,
                            Name = "TestProduct-2"
                        },
                        new
                        {
                            ID = new Guid("e88fc724-7427-4e48-8b7d-0b702ec2deab"),
                            IsUnderIncident = false,
                            Name = "TestProduct-3"
                        });
                });

            modelBuilder.Entity("IncidentCreator.Data.Models.IncidentProductMap", b =>
                {
                    b.HasOne("IncidentCreator.Data.Models.Incident", "Incident")
                        .WithMany("Products")
                        .HasForeignKey("incident_id");

                    b.HasOne("IncidentCreator.Data.Models.Product", "Product")
                        .WithMany("Incidents")
                        .HasForeignKey("product_id");

                    b.Navigation("Incident");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IncidentCreator.Data.Models.Incident", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("IncidentCreator.Data.Models.Product", b =>
                {
                    b.Navigation("Incidents");
                });
#pragma warning restore 612, 618
        }
    }
}
